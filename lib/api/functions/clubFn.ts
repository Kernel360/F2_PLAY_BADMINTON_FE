import type { components } from "@/schemas/schema.d.ts"; // generated by openapi-typescript

// Schema Obj
type Club = components["schemas"]["ClubCardResponse"];
type ClubCreateRequest = components["schemas"]["ClubCreateRequest"];
type ClubCreateResponse = components["schemas"]["ClubCreateResponse"];

const BASE_URL = `${process.env.NEXT_PUBLIC_BASE_URL}`;

export async function getClubs() {
  try {
    const response = await fetch(`${BASE_URL}/clubs`, {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
      },
    });

    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    const data = await response.json();
    return data.content as Club[];
  } catch (error) {
    console.log(error);
  }
}

export const postClubs = async (
  clubData: ClubCreateRequest,
): Promise<ClubCreateResponse> => {
  const response = await fetch(`${BASE_URL}/clubs`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    credentials: "include",
    body: JSON.stringify(clubData),
  });
  if (!response.ok) {
    throw new Error("Failed to create club");
  }
  return response.json();
};
