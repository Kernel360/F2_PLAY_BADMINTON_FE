import type { components } from "@/schemas/schema.d.ts"; // generated by openapi-typescript

// Schema Obj
type Club = components["schemas"]["ClubCardResponse"];
type ClubCreateRequest = components["schemas"]["ClubCreateRequest"];
type ClubCreateResponse = components["schemas"]["ClubCreateResponse"];

const BASE_URL = `${process.env.NEXT_PUBLIC_BASE_URL}`;

export async function getClubs(): Promise<Club[]> {
  try {
    const response = await fetch(
      `${BASE_URL}/clubs?page=0&size=100&sort=clubId`,
      {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
        },
      },
    );
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    const data = await response.json();
    return data.content as Club[];
  } catch (error) {
    console.error(error);
    return [];
  }
}

export const postClubs = async (
  clubData: ClubCreateRequest,
): Promise<ClubCreateResponse> => {
  const response = await fetch(`${BASE_URL}/clubs`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    credentials: "include",
    body: JSON.stringify(clubData),
  });
  if (!response.ok) {
    throw new Error("동호회 생성에 실패했습니다.");
  }
  return response.json();
};

export const postClubsImg = async (clubImg: FormData): Promise<string> => {
  console.log("fetch", clubImg);

  const response = await fetch(`${BASE_URL}/clubs/images`, {
    method: "POST",
    credentials: "include",
    body: clubImg,
  });
  if (!response.ok) {
    throw new Error("이미지 업로드에 실패했습니다. ");
  }
  return response.text();
};
